// bower:scss
@import "bower_components/foundation-sites/scss/foundation.scss";
// endbower

@import url(https://fonts.googleapis.com/css?family=VT323|Open+Sans:400,300,600,800);
$primary-font-family: 'Open Sans';
$secondary-font-family: 'VT323';

// Calculeate brightness of a given color.
@function brightness($color) {
  @return ((red($color) * .299) + (green($color) * .587) + (blue($color) * .114)) / 255 * 100%;
}

// Compares contrast of a given color to the light/dark arguments and returns whichever is most "contrasty"
@function color-contrast($color, $dark: $dark-text-default, $light: $light-text-default) {
  @if $color == null {
    @return null;
  }
  @else {
    $color-brightness: brightness($color);
    $light-text-brightness: brightness($light);
    $dark-text-brightness: brightness($dark);

    @return if(abs($color-brightness - $light-text-brightness) > abs($color-brightness - $dark-text-brightness), $light, $dark);
  }
}

$background: #1b374b;
$light-background: #e5f3fc;

$dark-text-default: #333333;
$light-text-default: #dddddd;

$cta-color: saturate(lighten(#d97720,10%),30%);
$primary-color: #2a80c5;

* {
  box-sizing: border-box;
}

body {
  background: #fafafa;
  font-family: $primary-font-family;
  color: #333;
  margin: 0;
  padding: 0;
  width: 100%;
}

p {
  a:link, a:visited {
    display: inline-block;
    padding: 0 0.2em;
    color: $cta-color;
  }

  a:hover, a:active {
    color: #fff;
    text-decoration: none;
    background: $cta-color;
  }
}

quote {
  position: relative;
  display: block;
  clear: both;
  width: 100%;
  text-align: center;
  margin: 2em 0;
  padding: 1em;
  background: rgba($primary-color,0.5); //rgba($background, 0.15);
  border-radius: 5px;
  &:after {
    position: absolute;
    right: 20px;
    bottom: -15px;
    display: block;
    content: '';
    width: 0;
    height: 0;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-top: 15px solid rgba($primary-color,0.5);
  }
}

.float-right {
  float: right;
  margin-left: 1em;
}

.float-left {
  float: left;
  margin-right: 1em;
}

@keyframes rotate-nav-item {
  0% {
    transform: rotate(45deg);
  }
  25% {
    transform: rotate(90deg);
  }
  50% {
    transform: rotate(135deg);
  }
  75% {
    transform: rotate(180deg);
  }
  100% {
    transform: rotate(225deg);
  }
}

$nav-height: 60px;
$nav-background: $background;
$nav-desktop-background: rgba($light-background,0.9);
.row.expanded.sticky-container {
  background: rgba($light-background,0.9);
}
.main-nav {
  width: 100%;
  position: relative;
  z-index: 99 !important;
  //background: rgba($light-background,0.9); //$background;
  //color: $background; //$dark-text-default;
  font-family: $secondary-font-family;
  font-size: 22px;
  transition: box-shadow 300ms linear, font-size 300ms linear, line-height 300ms linear;
  &.is-stuck {
    box-shadow: 0 0 10px rgba(0,0,0,0.3);
  }

  &.title-bar {
    height: $nav-height;
    line-height: $nav-height - 5px;
    padding: 0 10px;
    font-size: 1.5em;
    text-transform: uppercase;
  }

  &.top-bar {
    height: $nav-height;
    line-height: $nav-height - 5px;
    background: $nav-desktop-background;
    padding: 10px 0;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  ul {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    background: $nav-background;
    color: $light-text-default;
    width: 100%;
    margin: 0;
    padding: 0;
    > li {
      padding: 10px 12px;
      display: block;
      border-top: 1px solid rgba($light-text-default,0.5);
    }
  }

  a {
    text-align: left;
    color: inherit;
    position: relative;
    z-index: 0;
    text-shadow: 1px 1px 1px rgba(0,0,0,0.3);
    color: #fff;
    &:hover, &.is-active {
      color: $cta-color;
    }
  }

  @media screen and (min-width: 40em) {
    height: $nav-height;
    //line-height: $nav-height;
    font-size: 22px;

    ul {
      position: relative;
      background: transparent;
      display: flex;
      align-items: center;
      justify-content: flex-end;
      > li {
        display: inline-block;
        margin: 0;
        padding: 0 10px;
        border-top: none;
      }
    }

    a {
      color: $background;
      text-align: center;
      line-height: $nav-height + 5px;
    }
  }
}

.main-nav.title-bar {
  background: $background;
  color: #fff;
}

.topbar-logo {
  max-height: $nav-height - 15px;
  // line-height: 1;
  // vertical-align: 0;
}

.title-bar-logo {
  max-height: $nav-height - 5px;
  padding: 5px 0;
  float: right;
}

.main-nav .dropdown.menu {
  background: $background;
  color: #fff;
  position: fixed;
  left: 0;
  right: 0;
  top: 0;
  > li {
    display: table-row;
  }
  @media screen and (min-width: 40em) {
    position: relative;
    background: transparent;
    height: $nav-height;
    line-height: $nav-height;
    > li {
      display: table-cell;
    }
  }
}

header {
  background: $light-background; //$background;
  color: $light-text-default;
  padding: 50px 50px 100px;
  position: relative;
  p {
    text-align: center;
    padding: 1em 20%;
    margin: 0;
    font-style: italic;
  }
}

.css-logo {
  display: block;
  width: 100%;
  height: 100%;
  background-image: url('/images/css-family-logo.svg');
  background-repeat: no-repeat;
  background-position: center center;
  background-size: 90%;
  filter: saturate(50%);
  &:hover {
    filter: saturate(100%);
  }
}

footer {
  min-height: 220px;
  max-width: 100%;
  overflow: hidden;
  background: $background;
  position: relative;
  &:before {
    position: absolute;
    content: '';
    display: block;
    height: 211px;
    width: 1300px;
    right: 0;
    bottom: 0;
    left: 50%;
    margin-left: -650px;
    // background: lighten($background, 10%);
    // overflow: hidden;
    // mask-image: url('/images/oslo-skyline-2.png');
    background: url('/images/oslo-skyline-3.png') no-repeat center bottom;
    background-size: 100% auto;
  }
}

.footer-content {
  width: 100%;
  position: absolute;
  bottom: 0;
  text-align: center;
  color: $light-text-default;
  font-size: 13px;
  p {
    margin: 0.5em;
    padding: 0;
    line-height: 1.5;
  }
}

$total-sections: 7;
$section-start-background: #cfe8f9;
$section-end-background: $background;

.content {
  background: $section-end-background;
}

.content > section {
  width: 100%;
  padding: 2em 20% 4em 20%;
  position: relative;
}

@for $i from 1 through $total-sections {
  .content > section:nth-child(#{$i}) {
    @if $i == 1 {
      $background: $section-start-background;
    } @else if $i == $total-sections {
      $background: $section-end-background;
    } @else {
      $background: mix($section-start-background, $section-end-background, (100 - ($i / $total-sections * 100)));
    }
    z-index: ($i + 1);
    background: $background;
    color: color-contrast($background);
    filter: drop-shadow(0 -1px 1px rgba(darken($background,50%),0.2));
    > h2:first-child {
      z-index: $i;
      color: $background;
      //text-shadow: -1px -1px 0px rgba(#222, 0.4), 1px 1px 0px rgba(#eee, 0.4);
    }
  }
}

.content > section > h2:first-child {
  font-family: $primary-font-family;
  font-size: 50px;
  font-weight: 700;
  line-height: 0.85;
  letter-spacing: -0.1em;
  text-transform: uppercase;
  position: absolute;
  margin: 0;
  top: 0;
  left: 10px;
  transform: translateY(-90%);
  &:before {
    content: '< ';
  }
  &:after {
    content: ' />';
  }
}

.schedule {
  width: 80%;
  margin: 0 auto 100px;;
}

.schedule-item {
  width: 100%;
  max-height: 240px;
  display: flex;
  position: relative;
  justify-content: flex-start;
  transform: translateX(50%);
  left: -67px;
  margin-bottom: -58px;

  &:nth-child(2n+1) {
    justify-content: flex-start;
    flex-direction: row-reverse;
    transform: translateX(-50%);
    left: 67px;
    text-align: right;
  }
}

.schedule-item-image {
  flex-basis: 240px;
  width: 240px;
  height: 240px;
  > img {
    filter: grayscale(100%);
    clip-path: url('/images/layout-shapes.svg#polygon-clip-1');
  }
}

.schedule-item:hover .schedule-item-image > img {
  filter: grayscale(0%);
  clip-path: url('/images/layout-shapes.svg#polygon-clip-2');
}

.schedule-item-content {
  padding-top: 50px;
}

.schedule-item-time {
  font-size: 16px;
  line-height: 1;
  padding: 0 20px;
  margin: 0;
  margin-top: -5px;
  font-weight: 600;
  color: #444;
  border-bottom: 1px solid #444;
}

.schedule-item-description {
  padding: 0 20px;
  > h4 {
    font-size: 16px;
    text-transform: uppercase;
    margin: 0;
    color: $primary-color;
    &:hover {
      cursor: pointer;
      color: darken($primary-color, 10%);
    }
  }
  > p {
    font-size: 14px;
    margin: 0.5em 0 1em;
    max-height: 0;
    overflow: hidden;
    transition: max-height 500ms linear;
  }
}

.schedule-item.is-active .schedule-item-description > p {
  max-height: 500px;
}

section#venue {
  padding: 20px 0 70px;
}

#venue-map {
  height: 400px;
  width: 100%;
  color: $dark-text-default;
}

$dgrid-breakpoint: 40em;

$dgrid-background: $light-background;
$dgrid-item-background: darken($light-background,5%);
$dgrid-item-hover-background: darken($light-background,10%);

$dgrid-item-color: lighten($background, 5%);
$dgrid-item-hover-color: #fff;

$dgrid-item-border-size: 0;
$dgrid-item-border-color: $dgrid-background;
$dgrid-item-hover-border-color: $dgrid-background;

$dgrid-diamond-scale-up: 1.4142135623731;
$dgrid-diamond-scale-down: 0.68;//0.70710678;

$dgrid-row-items: 3;
$dgrid-select-rows: 1n + #{$dgrid-row-items + 1};
$dgrid-select-even-rows-first: #{$dgrid-row-items + $dgrid-row-items - 1}n + #{$dgrid-row-items + 1};
$dgrid-select-even-rows-last: #{$dgrid-row-items + $dgrid-row-items - 1}n + #{$dgrid-row-items + $dgrid-row-items - 1};

$dgrid-large-row-items: 5;
$dgrid-large-select-rows: 1n + #{$dgrid-large-row-items + 1};
$dgrid-large-select-even-rows-first: #{$dgrid-large-row-items + $dgrid-large-row-items - 1}n + #{$dgrid-large-row-items + 1};
$dgrid-large-select-even-rows-last: #{$dgrid-large-row-items + $dgrid-large-row-items - 1}n + #{$dgrid-large-row-items + $dgrid-large-row-items - 1};

.diamond-grid {
  box-sizing: border-box;
  width: 100%;
  margin: 0 auto;
  background: $dgrid-background;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: flex-start;
}

.diamond-grid > li {
  list-style: none;
  height: 0;
  width: (100% / $dgrid-row-items);
  padding-bottom: (100% / $dgrid-row-items);
  flex: (100% / $dgrid-row-items);
  position: relative;
  @media screen and (min-width: $dgrid-breakpoint) {
    width: (100% / $dgrid-large-row-items);
    padding-bottom: (100% / $dgrid-large-row-items);
    flex: (100% / $dgrid-large-row-items);
  }
}

.diamond {
  box-sizing: border-box;
  display: block;
  position: absolute;
  z-index: 1;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  transform: rotate(45deg) scale($dgrid-diamond-scale-down);
  text-decoration: none;
  background: $dgrid-item-background;
  color: $dgrid-item-color;
  border: $dgrid-item-border-size solid $dgrid-item-border-color;
  overflow: hidden;
}

.diamond:after {
  //border: 1px solid red;
  content: '';
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  font-family: $secondary-font-family;
  text-transform: uppercase;
  text-align: center;
  line-height: 1.25;
  transform: rotate(-45deg);
}

.diamond:hover {
  cursor: pointer;
  background: $dgrid-item-hover-background;
  color: $dgrid-item-hover-color;
  border-color: $dgrid-item-hover-border-color;
  cursor: default;
}

.diamond-grid > li:nth-child(#{$dgrid-select-rows}) {
  margin-top: -(100% / ($dgrid-row-items * 2));
  @media screen and (min-width: 40em) { margin-top: 0; }
}
.diamond-grid > li:nth-child(#{$dgrid-select-even-rows-first}) {
  margin-left: (100% / ($dgrid-row-items * 2));
  @media screen and (min-width: 40em) { margin-left: 0; }
}
.diamond-grid > li:nth-child(#{$dgrid-select-even-rows-last}) {
  margin-right: (100% / ($dgrid-row-items * 2));
  @media screen and (min-width: 40em) { margin-right: 0; }
}
@media screen and (min-width: 40em) {
  .diamond-grid > li:nth-child(#{$dgrid-large-select-rows}) {
    margin-top: -(100% / ($dgrid-large-row-items * 2));
  }
  .diamond-grid > li:nth-child(#{$dgrid-large-select-even-rows-first}) {
    margin-left: (100% / ($dgrid-large-row-items * 2));
  }
  .diamond-grid > li:nth-child(#{$dgrid-large-select-even-rows-last}) {
    margin-right: (100% / ($dgrid-large-row-items * 2));
  }
}

// Hide some of the grid-diamonds on small screens
@media screen and (max-width: $dgrid-breakpoint) {
  .diamond-grid > li:nth-child(1n + 14) {
    display: none;
    visibility: hidden;
  }
}

// Insert CSS Family logo
$child-css-family: 12;
$child-desktop-css-family: 18;

@media screen and (max-width: $dgrid-breakpoint) {
  .diamond-grid > li:nth-child(#{$child-css-family}) > .diamond:after {
    background: url(/images/css-family-logo.svg) no-repeat center center;
    background-size: auto 70%;
    filter: saturate(60%);
  }
}

@media screen and (min-width: $dgrid-breakpoint) {
  .diamond-grid > li:nth-child(#{$child-desktop-css-family}) > .diamond:after {
    background: url(/images/css-family-logo.svg) no-repeat center center;
    background-size: auto 70%;
    filter: saturate(60%);
  }
}

// Insert content into specific diamonds depending on screen sice
$content-date: ' 1 June \A  2016';
$child-date: 11;
$child-desktop-date: 8;

$content-place: ' Oslo, \A  Norway';
$child-place: 13;
$child-desktop-place: 9;

$content-tickets: ' Get your \A  ticket!';
$child-tickets: 13;
$child-desktop-tickets: 9;

$content-desc-1: ' A one-day \A  conference';
$child-desc-1: 19;
$child-desktop-desc-1: 19;

$content-desc-2: ' for designers \A  and developers';
$child-desc-2: 20;
$child-desktop-desc-2: 20;

$content-desc-3: 'who ♥ CSS';
$child-desc-3: 21;
$child-desktop-desc-3: 21;

@mixin insertContent($content, $nthChild, $fontSize: 2.5em) {
  .diamond-grid > li:nth-child(#{$nthChild}) > .diamond {
    font-size: $fontSize;
    &:after {
      content: $content;
      white-space: pre;
    }
  }
}
@media screen and (max-width: $dgrid-breakpoint) {
  @include insertContent($content-date, $child-date);
  @include insertContent($content-place, $child-place);
  //@include insertContent($content-tickets, $child-tickets);
  // @include insertContent($content-desc-1, $child-desc-1, 1.5em);
  // @include insertContent($content-desc-2, $child-desc-2, 1.5em);
  // @include insertContent($content-desc-3, $child-desc-3, 1.5em);
}
@media screen and (min-width: $dgrid-breakpoint) {
  @include insertContent($content-date, $child-desktop-date);
  @include insertContent($content-place, $child-desktop-place);
  //@include insertContent($content-tickets, $child-desktop-tickets);
  @include insertContent($content-desc-1, $child-desktop-desc-1, 1.5em);
  @include insertContent($content-desc-2, $child-desktop-desc-2, 1.5em);
  @include insertContent($content-desc-3, $child-desktop-desc-3, 1.5em);
}


// Insert logo into specific diamonds depending on screen size
$logo-letter-background: $background;
$logo-letter-color: $light-background;
$logo-letter-hover-background: $cta-color;
$logo-letter-hover-color: #fff;

/// Replace `$search` with `$replace` in `$string`
/// @author Hugo Giraudel
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }
  @return $string;
}

@function urlEncode($string) {
  $string: str-replace($string, ' ', '%20');
  $string: str-replace($string, '<', '%3C');
  $string: str-replace($string, '>', '%3E');
  $string: str-replace($string, '/', '%2F');
  $string: str-replace($string, '=', '%3D');
  $string: str-replace($string, '"', '%22');
  $string: str-replace($string, ':', '%3A');
  @return $string;
}

@function buildSvg($letterShapes) {
  $letterOut: '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="80" height="120">#{$letterShapes}</svg>';
  @return $letterOut;
}

@function svgLetter($letter, $color) {
  $svgLetters: (
    C: '<rect width="18" height="18" x="0" y="20" fill="#{$color}" /><rect width="18" height="18" x="0" y="40" fill="#{$color}" /><rect width="18" height="18" x="0" y="60" fill="#{$color}" /><rect width="18" height="18" x="0" y="80" fill="#{$color}" /><rect width="18" height="18" x="20" y="0" fill="#{$color}" /><rect width="18" height="18" x="20" y="100" fill="#{$color}" /><rect width="18" height="18" x="40" y="0" fill="#{$color}" /><rect width="18" height="18" x="40" y="100" fill="#{$color}" /><rect width="18" height="18" x="60" y="20" fill="#{$color}" /><rect width="18" height="18" x="60" y="80" fill="#{$color}" />',
    S: '<rect width="18" height="18" x="0" y="20" fill="#{$color}" /><rect width="18" height="18" x="0" y="80" fill="#{$color}" /><rect width="18" height="18" x="20" y="0" fill="#{$color}" /><rect width="18" height="18" x="20" y="40" fill="#{$color}" /><rect width="18" height="18" x="20" y="100" fill="#{$color}" /><rect width="18" height="18" x="40" y="0" fill="#{$color}" /><rect width="18" height="18" x="40" y="60" fill="#{$color}" /><rect width="18" height="18" x="40" y="100" fill="#{$color}" /><rect width="18" height="18" x="60" y="20" fill="#{$color}" /><rect width="18" height="18" x="60" y="80" fill="#{$color}" />'
  );

  $letterOut: urlEncode(buildSvg(map-get($svgLetters, $letter)));
  @return url('data:image/svg+xml;charset=utf8,#{$letterOut}');
}

@mixin showLetter($letter, $nthChild, $fontSize) {
  .diamond-grid > li:nth-child(#{$nthChild}) > .diamond {
    font-size: $fontSize;
    background-color: $logo-letter-background;
    z-index: 97;
    &:after {
      // background-color: $logo-letter-color;
      // mask: url(/images/logo-letter-#{$letter}.svg) no-repeat center center;
      // mask-size: auto 90%;
      // background: url('/images/logo-letter-#{$letter}.svg#red') no-repeat center center;
      background-size: auto 90%;
      background-repeat: no-repeat;
      background-position: center center;
      background-image: url('/images/logo-letter-#{$letter}.png');
      background-image: svgLetter($letter, $logo-letter-color);
    }
    &:hover {
      background-color: $logo-letter-hover-background;
      &:after {
        //background-color: $logo-letter-hover-color;
        //background-image: url('/images/logo-letter-#{$letter}-2.png')
        background-image: svgLetter($letter, $logo-letter-hover-color);
      }
    }
  }
}

@mixin showLabel($nthChild) {
  .diamond-grid > li:nth-child(#{$nthChild}) > .diamond {
    overflow: visible;
    &:before {
      content: 'NORDIC';
      display: block;
      padding: 3px 10px;
      position: absolute;
      z-index: 98;
      bottom: 0;
      left: 20%;
      background: $cta-color;
      color: #fff;
      font-size: 0.9em;
      font-weight: bold;
      text-transform: uppercase;
      transform-origin: top left;
      transform: translateY(100%);
      border-radius: 0 0 3px 3px;
    }
  }
}

$dgrid-logo-C-child: 4;
$dgrid-desktop-logo-C-child: 6;

$dgrid-logo-S1-child: 5;
$dgrid-desktop-logo-S1-child: 7;

$dgrid-logo-S2-child: 7;
$dgrid-desktop-logo-S2-child: 11;

@media screen and (max-width: $dgrid-breakpoint) {
  @include showLetter('C', $dgrid-logo-C-child, 14px);
  @include showLetter('S', $dgrid-logo-S1-child, 14px);
  @include showLetter('S', $dgrid-logo-S2-child, 14px);
  @include showLabel($dgrid-logo-C-child);
}

@media screen and (min-width: $dgrid-breakpoint) {
  @include showLetter('C', $dgrid-desktop-logo-C-child, 20px);
  @include showLetter('S', $dgrid-desktop-logo-S1-child, 20px);
  @include showLetter('S', $dgrid-desktop-logo-S2-child, 20px);
  @include showLabel($dgrid-desktop-logo-C-child);
}



